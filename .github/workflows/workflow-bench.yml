name: Benchmarks

on:
  push:
    branches:
      - '**'
    tags:
      - '**'

jobs:
  benchmarks:
    name: Benchmarks
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - {os: ubuntu-latest, r: 'release', python-version: 3.9}
      fail-fast: false
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout github
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache posteriordb database
        uses: actions/cache@v2
        with:
          path: |
            ~/.posteriordb
          key: ${{ runner.os }}-${{ hashFiles('~/.posteriordb/**') }}

      - name: Install Ubuntu dependencies
        run: sudo apt-get install libcurl4-openssl-dev

      - name: Set up Python ${{ matrix.config.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.config.python-version }}

      - name: Set up R ${{ matrix.config.r }}
        uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.config.r }}

      - name: Install dependencies (python)
        run: |
          pip install --upgrade pip wheel
          pip install cmdstanpy posteriordb

      - name: Install dependencies (R)
        run: |
          install.packages("argparse")
          install.packages("git2r")
          install.packages("cmdstanr", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
        shell: Rscript {0}

      - name: Build models (defaults)
        run: |
          mkdir fit_dir
          python python/benchmark.py examples/issue-2894.json --run_dir fit_dir --cores 1 --chains 1 --nrounds 10 --parallel_chains 1 --threads_per_chain 1 --iter_warmup 2000 --iter_sampling 50000

      - uses: actions/upload-artifact@v2
        if: success()
        with:
          name: fit_results_${{ matrix.config.os }}
          path: fit_dir
